package PIN_FSM is

   type System_State is (Uninitialized, Initialized) with Size => 8;
   type Auth_State is (Unauthenticated, Authenticated) with Size => 8;
   type PIN is mod 2**64;
   type Kind is (Auth => 1, Deauth => 2, Forward => 3, Change => 4) with Size => 8;
   type Retries is range 0 .. 6 with Size => 8;

   type Config is
      message
         Max_Retries : Retries;
         PIN         : PIN;
      end message;

   type Request is
      message
         Kind : Kind
            then PIN
               if Kind = Auth or Kind = Change
            then Data
               if Kind = Forward
            then null
               if Kind = Deauth;
         PIN : PIN
            then null;
         Data : Opaque
            with Size => Message'Last - Kind'Last;
      end message;

   generic
      User_Channel     : Channel with Readable;
      Config_Channel   : Channel with Readable;
      Upstream_Channel : Channel with Writable;
   session Authentication with
      Initial => Initialize,
      Final   => Error
   is
      System_State : System_State := Uninitialized;
      Auth_State   : Auth_State   := Unauthenticated;
      PIN          : PIN;
      Retries      : Retries;
      Max_Retries  : Retries;
      Request      : Request;
      Config       : Config;
      --  INVARIANT: if PIN is changed then System_State = Uninitialized or Auth_State = Authenticated
      --  INVARIANT: if Retries >= Max_Retries then transition target is Disabled
      --  INVARIANT: if transition target is Authenticated then Retries < Max_Retries and Request.Kind = Auth and Request.PIN = PIN
      --  INVARIANT: if Request.Kind = Auth and Request.PIN /= PIN then transition target is Locked
      --  INVARIANT: if Upstream_Channel'Write (Request) is used then Request.Kind = Forward
      --  INVARIANT: if Upstream_Channel'Write is used then Auth_State = Authenticated
      --  INVARIANT: if Config is changed then System_State = Uninitialized and Auth_State = Unauthenticated
      --  INVARIANT: if System_State = Initialized then System_State is not changed
   begin
      state Initialize
      is
      begin
         Config_Channel'Read (Config);
      transition
         then Error
            if Config'Valid = False
         then Setup
      end Initialize;

      state Setup
      is
      begin
         PIN          := Config.PIN;
         Max_Retries  := Config.Max_Retries;
         System_State := Initialized;
      transition
         then Locked
      exception
         then Error
      end Setup;

      state Locked
      is
      begin
         Auth_State := Unauthenticated;
         User_Channel'Read (Request);
         Retries := Retries + 1;
      transition
         then Error
            if Request'Valid = False
         then Disabled
            if Retries >= Max_Retries
         then Authenticated
            if Request.Kind = Auth
               and Request.PIN = PIN
         then Locked
            if (Request.Kind = Auth and Request.PIN /= PIN)
               or Request.Kind = Deauth
         then Error
      end Locked;

      state Disabled
      is
      begin
      transition
         then Disabled
      end Disabled;

      state Authenticated
      is
      begin
         Auth_State := Authenticated;
         Retries := 0;
         User_Channel'Read (Request);
      transition
         then Error
            if Request'Valid = False
         then Authenticated
            if Request.Kind = Auth and PIN = Request.PIN
         then Locked
            if (Request.Kind = Auth and PIN /= Request.PIN)
               or Request.Kind = Deauth
         then Forwarding
            if Request.Kind = Forward
         then Update
            if Request.Kind = Change
         then Error
      end Authenticated;

      state Update
      is
      begin
         PIN := Request.PIN;
      transition
         then Authenticated
      exception
         then Error
      end Update;

      state Forwarding
      is
      begin
         Upstream_Channel'Write (Request);
      transition
         then Authenticated
      exception
         then Error
      end Forwarding;

      state Error is null state;
   end Authentication;

end PIN_FSM;
